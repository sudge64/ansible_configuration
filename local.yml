---
- hosts: localhost
  connection: local
  become: true

  pre_tasks:
    - name: Update package manager cache
      tags: always
      apt: update_cache=yes
      changed_when: false
      when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]
      become: true

  tasks:
  - name: install terminal packages
    package: 
      name: 
        - htop
        - cmatrix
        - figlet
        - cowsay
        - neofetch
        - python3-psutil
        - python3-pip
        - zsh
      state: present

  - name: set dash-to-dock preferences
    become_user: testing
    community.general.dconf:
      key: "/org/gnome/shell/extensions/dash-to-dock"
      value: "['click-action=minimize-or-previews', 'dock-fixed=false', 'dock-position=LEFT', 'extend-height=false', 'hide=false', 'manualhide=false']"
#      value: "['click-action='minimize-or-previews'', 'dock-fixed=false', 'dock-position='LEFT'', 'extend-height=false', 'hide=false', 'manualhide=false']"
#      value: "['click-action='minimize-or-previews'', 'dock-fixed=false', 'dock-position='LEFT'', 'extend-height=false', 'hide=false', 'manualhide=false']"

  - name: set pop-cosmic workspace preference
    become_user: testing
    community.general.dconf:
      key: "/org/gnome/shell/extensions/pop-cosmic"
      value: "'workspace-picker-left=false'"

  - name: set desktop preferences
    become_user: testing
    community.general.dconf:
      key: "/org/gnome/desktop/interface"
#      value: "['clock-show-seconds=false', 'clock-show-weekday=true', 'color-scheme='prefer-dark'', 'enable-animations=false', 'enable-hot-corners=true', 'font-antialiasing='grayscale'', 'font-hinting='slight'', 'toolkit-accessibility=false']"
      value: "['clock-show-seconds=false', 'clock-show-weekday=true', 'color-scheme=prefer-dark', 'enable-animations=false', 'enable-hot-corners=true', 'font-antialiasing=grayscale', 'font-hinting=slight', 'toolkit-accessibility=false']"

  - name: set keyboard shortcuts
    become_user: testing
    community.general.dconf:
      key: "/org/gnome/settings-daemon/plugins/media-keys"
#      value: "['email=['<Super>f']', 'home=['<Super>e']']"
      value: "['email=[<Super>f]', 'home=[<Super>e]']"

  - name: set program menu preferences
    become_user: testing
    community.general.dconf:
      key: "/org/gnome/desktop/wm/preferences"
#      value: "['button-layout='appmenu:minimize,maximize,close'', 'home=['<Super>e']']"
      value: "['button-layout=appmenu:minimize,maximize,close', 'home=[<Super>e]']"

  - name: Install MangoHud from GitHub, manually, 1
    package:
      name:
        - build-essential
        - meson
        - ninja-build
        - glslang-tools
        - libx11-dev
        - cmake
        - libxnvctrl-dev
        - libdbus-1-dev
      state: present

  - name: Fix broken installs
    ansible.builtin.shell: apt --fix-broken install

  - name: Install MangoHud from GitHub, manually, 2
    ansible.builtin.shell: pip3 install mako

  - name: install MangoHud from GitHub, manually, 3
    become_user: testing
    ansible.builtin.shell: rm -rf MangoHud && git clone --recurse-submodules https://github.com/flightlessmango/MangoHud.git && cd MangoHud && meson build && ninja -C build install && cd ~

  - name: install zsh-syntax-highlighting from GitHub, manually
    become_user: testing
    ansible.builtin.shell: rm -rf zsh-syntax-highlighting/ && git clone https://github.com/zsh-users/zsh-syntax-highlighting.git

  - name: install zsh-autosuggestions from GitHub, manually
    become_user: testing
    ansible.builtin.shell: rm -rf ~/.zsh/zsh-autosuggestions/ && git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions

  - name: install graphical packages
    package: 
      name: 
        - alacritty
        - syncthing
        - steam
        - stacer
        - code
        - cura
      state: present

  - name: install libreoffice packages
    package: 
      name: libreoffice
      state: present

#  - name: install yacreader (xUbuntu 22.04)
#    ansible.builtin.shell: echo 'deb http://download.opensuse.org/repositories/home:/selmf/xUbuntu_22.04/ /' | sudo tee /etc/apt/sources.list.d/home:selmf.list && curl -fsSL https://download.opensuse.org/repositories/home:selmf/xUbuntu_22.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_selmf.gpg > /dev/null && sudo apt update -y && sudo apt install yacreader -y

#  - name: install discord .deb package
#    ansible.builtin.shell: wget 'https://discord.com/api/download?platform=linux&format=deb' #&& sudo dpkg -i download\?platform=linux\&format=deb

  - name: Ensure fonts directory
    file:
      path: "/home/testing/.local/share/fonts"
      state: directory

  - name: Meslo exists
    become_user: testing
    shell: "ls /home/testing/.local/share/fonts/Meslo*"
    register: meslo_exists
    ignore_errors: yes

  - name: Download Meslo
    become_user: testing
    when: meslo_exists is failed
    ansible.builtin.unarchive:
      src: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip
      dest: "/home/testing/.local/share/fonts"
      remote_src: yes

  - name: make directory ~/.config/alacritty/
    ansible.builtin.shell: mkdir /home/testing/.config/alacritty/
    ignore_errors: yes

  - name: make directory ~/.config/MangoHud/
    ansible.builtin.shell: mkdir /home/testing/.config/MangoHud/
    ignore_errors: yes

  - name: copy alacritty.yml
    copy:
      src: files/alacritty.yml
      dest: /home/testing/.config/alacritty/alacritty.yml
      owner: testing
      group: testing

  - name: copy MangoHud.conf
    copy:
      src: files/MangoHud.conf
      dest: /home/testing/.config/MangoHud/MangoHud.conf
      owner: testing
      group: testing

  - name: copy .zshrc file
    copy:
      src: files/.zshrc
      dest: /home/testing/.zshrc
      owner: testing
      group: testing

  - name: copy .p10k.zsh file
    copy:
      src: files/.p10k.zsh
      dest: /home/testing/.p10k.zsh
      owner: testing
      group: testing

  - name: flatpak present
    ansible.builtin.apt:
      name: flatpak
      state: present

  - name: flathub flatpak repo
    community.general.flatpak_remote:
      name: flathub
      state: present
      flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
      method: system

#  - name: install sound & video flatpaks (audacity, blender, fre:ac, gimp, inkscape, handbrake, obs, pixelorama, krita)
#    community.general.flatpak:
#      name: 
#        - org.blender.Blender
#        - org.audacityteam.Audacity
#        - org.freac.freac
#        - org.gimp.GIMP
#        - org.inkscape.Inkscape
#        - fr.handbrake.ghb
#        - com.obsproject.Studio
#        - com.orama_interactive.Pixelorama
#        - org.kde.krita
#      state: present
#      method: user

  - name: install sound & video flatpaks (audacity, blender, fre:ac, gimp, inkscape, handbrake, obs, pixelorama, krita)
    community.general.flatpak:
      name: org.blender.Blender
      state: present
      method: system

  - name: install generally useful flatpaks (bottles, flatseal, extension manager, godot, thunderbird)
    community.general.flatpak:
      name: 
        - com.usebottles.Bottles
        - com.github.tchx84.Flatseal
        - com.mattjakeman.ExtensionManager
        - org.godotengine.Godot
        - org.mozilla.Thunderbird
      state: present
      method: user

  - name: install CAD flatpaks (FreeCAD, KiCad, OpenSCAD)
    community.general.flatpak:
      name: 
        - org.freecadweb.FreeCAD
        - org.kicad.KiCad
        - org.openscad.OpenSCAD
      state: present
      method: user

  - name: install funtime flatpaks (Dolphin, Citra, PCSX2, RetroArch)
    community.general.flatpak:
      name: 
        - net.pcsx2.PCSX2
        - org.DolphinEmu.dolphin-emu
        - org.citra_emu.citra
        - org.libretro.RetroArch
      state: present
      method: user

  - name: Change shell to zsh
    become_user: testing
    ansible.builtin.shell: touch "$HOME/.cache/zshhistory" && git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k

  - name: set favorite apps
    become_user: testing
    community.general.dconf:
      key: "/org/gnome/shell"
      value: "'favorite-apps=['pop-cosmic-launcher.desktop', 'pop-cosmic-workspaces.desktop', 'pop-cosmic-applications.desktop', 'com.alacritty.Alacritty.desktop', 'firefox.desktop', 'org.gnome.Nautilus.desktop', 'vlc.desktop', 'org.mozilla.Thunderbird.desktop', 'code.desktop', 'steam.desktop', 'virt-manager.desktop', 'io.elementary.appcenter.desktop', 'gnome-control-center.desktop']'"

  - name: set desktop do not disturb
    become_user: testing
    community.general.dconf:
      key: "/org/gnome/desktop/notifications"
      value: "['application-children=['org-gnome-nautilus', 'io-elementary-appcenter', 'org-gnome-gedit', 'com-github-donadigo-eddy', 'gnome-printers-panel', 'firefox', 'vlc', 'org-gnome-lollypop', 'org-gnome-extensions-desktop', 'org-gnome-baobab', 'org-gimp-gimp', 'steam', 'org-kicad-kicad', 'com-alacritty-alacritty']', 'value: 'show-banners=false']"

  - name: add ansible user
    user:
      name: ansible_user
      system: yes

  - name: set up sudo for ansible user
    copy:
      src: files/sudoer_ansible_user
      dest: /etc/sudoers.d/ansible_user
      owner: root
      group: root
      mode: 0440

  - name: add ansible-pull cron job
    cron:
      name: ansible auto-provision
      user: ansible_user
      minute: "*/10"
      job: ansible-pull -o -U https://github.com/sudge64/ansible_configuration.git